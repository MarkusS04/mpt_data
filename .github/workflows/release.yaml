name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1

      - name: Store config
        run: |
          cat << EOF > config.yaml
          Database:
            Path: $HOME/apps/mpt_testing_enc
            EncryptionKey: FpQYpOAXmYTMiRDb33dnyh8OFaHRgWHOTvKxjWTwsCM=
          Log:
            Path: $HOME/apps/mpt/logs
            LevelDB: 2 # INFO = 0, WARNING = 1, ERROR = 2
          Api:
            Port: 9000
            AuthenticationRequired: true
            JWTKey: 6z5ZeRU!uW#bD9r^9nF&ijn@j2@!2NMAh^vXSJS$f5^HZTSkvGN%A9xj5qgR8Be9A6Ew$$xzKybe3NTozKJJ6MZAB9JUip9AWDkZgu$i6%gQKojZ%QLQzEbN6N!AWkwz
          PDF:
            Path: $HOME/apps/mpt/pdf
          EOF

      - name: Prepare env
        run: go run test/prep.go

      - name: execute Tests
        run: GOMAXPROCS=1 go test ./...

  docker:
    needs: test
    if: success()

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Set environment variables
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: |
            linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/mpt_data:${{ github.ref_name }}
            ghcr.io/${{ env.REPO_OWNER }}/mpt_data:latest

      - name: Logout from GitHub Container Registry
        run: docker logout ghcr.io

  build:
    needs: test
    if: success()

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1

      - name: Install cross compiler
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build for Windows
        run: |
          export GOOS=windows
          export GOARCH=amd64
          export CGO_ENABLED=1
          export CC=x86_64-w64-mingw32-gcc
          go build -ldflags "-s" -o mpt_data.exe main.go

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            mpt_data.exe
            config.yaml
          token: ${{ secrets.TOKEN }}