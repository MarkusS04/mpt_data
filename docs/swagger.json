{
    "swagger": "2.0",
    "info": {
        "description": "Meeting Planning Tool API",
        "title": "MPT",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/MIT"
        },
        "version": "1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/login": {
            "post": {
                "description": "Login to Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Auth Information",
                        "name": "Auth-Information",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apimodel.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer-Token"
                            }
                        }
                    }
                }
            }
        },
        "/meeting": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all Meetings in the specified time period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Get Meetings",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "Start date/timestamp, Either English Date, or RFC3339",
                        "name": "StartDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "End date/timestamp, Either English Date, or RFC3339",
                        "name": "EndDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Meeting"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Meetings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Add Meetings",
                "parameters": [
                    {
                        "description": "Meetings",
                        "name": "Meetings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Meeting"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/meeting/{MeetingId}/absence": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get absent people for a meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting",
                    "Absence"
                ],
                "summary": "Get Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of meeting",
                        "name": "MeetingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add absent people for a meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting",
                    "Absence"
                ],
                "summary": "Add Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of meeting",
                        "name": "MeetingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID of people who are absent",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete absent people for a meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting",
                    "Absence"
                ],
                "summary": "Delete Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of meeting",
                        "name": "MeetingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID of people who are no longer absent",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/meeting/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the date of one meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Update Meetings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of meeting",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Meeting",
                        "name": "Meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Meeting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one Meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Delete Meetings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of meeting",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/person": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all Persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get Person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Person"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Add Person",
                "parameters": [
                    {
                        "description": "Person",
                        "name": "Person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Person"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/person/{PersonId}/absence": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get absence of person in period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Get Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "Start date/timestamp, Either English Date, or RFC3339",
                        "name": "StartDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "End date/timestamp, Either English Date, or RFC3339",
                        "name": "EndDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Meeting"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add absence of person in period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Add Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID of meetings where person is absent",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete absence of person in period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Delete Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID of meeting where person is no longer absent",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/person/{PersonId}/absencerecurring": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get recurring absence of person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Get Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.PersonRecurringAbsence"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add recurring absence to person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Add Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Weekdays where person is absent. 0 = Sunday",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete absence of person in period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Absence"
                ],
                "summary": "Delete Absence",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of person",
                        "name": "PersonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Weekday where person is no longer absent",
                        "name": "Absence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/person/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Update Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one person with its details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Delete Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/person/{id}/task": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Tasks of Person(s)\nID of Person must always be set, 0 to load all persons with their tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Task"
                ],
                "summary": "Get Person-Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "eg. loading failed due to any error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Tasks to a Person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Task"
                ],
                "summary": "Add Tasks to Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task-Details which should be added to a person",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.PersonTask"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete tasks of a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person",
                    "Task"
                ],
                "summary": "Delete Persons Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task-Details which should be deleted from a person",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/plan": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Plan for a period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/pdf"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Get Plan",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "Start date/timestamp, Either English Date, or RFC3339",
                        "name": "StartDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "End date/timestamp, Either English Date, or RFC3339",
                        "name": "EndDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Plan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Plan for a period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Create Plan",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "Start date/timestamp, Either English Date, or RFC3339",
                        "name": "StartDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"2023-01-21\", \"2023-01-21T00:00:00+00:00\"",
                        "description": "End date/timestamp, Either English Date, or RFC3339",
                        "name": "EndDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Plan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/plan/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Plan for a specific planId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Get Plan with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of plan item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Person for one task and meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Update a Plan Element",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of plan item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID of Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.updatePlan.p"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/plan/{id}/people": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Loads all people for a meeting with specified task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Get people forPlan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of plan item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Person"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/task": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all Tasks with their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get Task",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbmodel.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the Ordering of Tasks in selects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update Task Order",
                "parameters": [
                    {
                        "description": "Array to hold all tasks and their ordering",
                        "name": "tasks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apimodel.OrderTask"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Add Task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Task"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/task/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the name of a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete one Task with its details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Delete Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/task/{id}/detail": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the Ordering of TaskDetails in selects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update TaskDetail Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Array to hold all taskDetails and their ordering",
                        "name": "tasks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apimodel.OrderTaskDetail"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Detail to Task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Add Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskDetail",
                        "name": "TaskDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.TaskDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dbmodel.TaskDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/task/{id}/detail/{detailId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the name of a taskdetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update TaskDetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of taskdetail",
                        "name": "detailId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dbmodel.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Detail of Task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Delete Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of task",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of taskdetail",
                        "name": "detailId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/user/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change the Password to login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Auth Information",
                        "name": "Auth-Information",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.changePW.pw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apimodel.OrderTask": {
            "type": "object",
            "properties": {
                "orderNumber": {
                    "type": "integer"
                },
                "taskID": {
                    "type": "integer"
                }
            }
        },
        "apimodel.OrderTaskDetail": {
            "type": "object",
            "properties": {
                "orderNumber": {
                    "type": "integer"
                },
                "taskDetailID": {
                    "type": "integer"
                }
            }
        },
        "apimodel.Result": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "apimodel.UserLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.changePW.pw": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "dbmodel.Meeting": {
            "type": "object",
            "properties": {
                "Date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dbmodel.Person": {
            "type": "object",
            "properties": {
                "givenName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "dbmodel.PersonRecurringAbsence": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "weekday": {
                    "type": "integer"
                }
            }
        },
        "dbmodel.PersonTask": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "person": {
                    "$ref": "#/definitions/dbmodel.Person"
                },
                "taskDetail": {
                    "$ref": "#/definitions/dbmodel.TaskDetail"
                }
            }
        },
        "dbmodel.Plan": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "meeting": {
                    "$ref": "#/definitions/dbmodel.Meeting"
                },
                "person": {
                    "$ref": "#/definitions/dbmodel.Person"
                },
                "taskDetail": {
                    "$ref": "#/definitions/dbmodel.TaskDetail"
                }
            }
        },
        "dbmodel.Task": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orderNumber": {
                    "type": "integer"
                },
                "taskDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dbmodel.TaskDetail"
                    }
                }
            }
        },
        "dbmodel.TaskDetail": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "orderNumber": {
                    "type": "integer"
                },
                "task": {
                    "$ref": "#/definitions/dbmodel.Task"
                },
                "taskID": {
                    "type": "integer"
                }
            }
        },
        "plan.updatePlan.p": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}